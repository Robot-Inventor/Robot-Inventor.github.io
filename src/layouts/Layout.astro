---
import "./Layout.css";

import { getEntry } from "astro:content";
import { ViewTransitions } from "astro:transitions";
import { Image } from "astro:assets";

interface Props {
    frontmatter: {
        title: string;
        description: string;
        author:
            | string
            | {
                  id: string;
                  collection: string;
              };
        showAuthor: boolean;
        pubDate: string;
        modifiedDate?: string;
        showDate?: boolean;
        thumbnail?: ImageMetadata;
        showThumbnail: boolean;
    };
}

if (!Astro.site) throw new Error("site is not defined");
let thumbnailUrl = new URL("/icon/ogp_default_thumbnail.png", Astro.site.href).href;
if (Astro.props.frontmatter.thumbnail) {
    thumbnailUrl = new URL(Astro.props.frontmatter.thumbnail.src, Astro.site.href).href;
}

const authorId =
    typeof Astro.props.frontmatter.author === "string"
        ? Astro.props.frontmatter.author
        : Astro.props.frontmatter.author.id;
const author = await getEntry("author", authorId);
if (!author) throw new Error("Undefined author");

const titleWithSiteName = `${Astro.props.frontmatter.title} - ${import.meta.env.SITE_NAME}`;

const schema = JSON.stringify([
    {
        "@context": "https://schema.org",
        "@type": "WebSite",
        name: import.meta.env.SITE_NAME,
        url: Astro.site
    },
    {
        "@context": "https://schema.org",
        "@type": "BlogPosting",
        mainEntityOfPage: {
            "@type": "WebPage",
            "@id": Astro.url
        },
        headline: titleWithSiteName,
        description: Astro.props.frontmatter.description,
        // TODO: すべての画像を取得
        image: [thumbnailUrl],
        author: {
            "@type": author.data.type,
            name: authorId,
            url: author.data.homePage,
            sameAs: author.data.sameAs
        },
        datePublished: Astro.props.frontmatter.pubDate,
        dateModified: Astro.props.frontmatter.modifiedDate || Astro.props.frontmatter.pubDate
    }
]);

const generateShareURL = (source: string) => {
    const url = new URL(Astro.url);
    url.searchParams.append("utm_source", source);
    return url.href;
};

const ISO8601ToLocale = (iso8601: string) => {
    return iso8601
        .replace("T", " ")
        .replace(/[\+\-]\d{2}:\d{2}/, "")
        .replace(/(\d{2,4})\-(\d{1,2})\-(\d{1,2})/, "$1年$2月$3日")
        .replace(/(\d{2}:\d{2}):\d{2}/, "$1")
        .replace(/\.\d+$/, "");
};
---

<!doctype html>
<html lang="ja">
    <head prefix="og: http://ogp.me/ns#">
        <!-- Google tag (gtag.js) -->
        <script is:inline async src="https://www.googletagmanager.com/gtag/js?id=G-7HZY93W2BY"></script>
        <script is:inline>
        window.dataLayer = window.dataLayer || [];
        function gtag() {
            dataLayer.push(arguments);
        }
        gtag("js", new Date());

        gtag("config", "G-7HZY93W2BY");
        </script>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="apple-touch-icon" sizes="180x180" href="/icon/favicon/apple-touch-icon.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/icon/favicon/favicon-32x32.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/icon/favicon/favicon-16x16.png" />
        <link rel="manifest" href="/icon/favicon/site.webmanifest" />
        <link rel="mask-icon" href="/icon/favicon/safari-pinned-tab.svg" color="#ffa4a4" />
        <link rel="shortcut icon" href="/icon/favicon/favicon.ico" />
        <link
            rel="alternate"
            type="application/rss+xml"
            title={`${import.meta.env.SITE_NAME} RSS Feed`}
            href={`${import.meta.env.SITE}/rss.xml`}
        />
        <link rel="sitemap" href="/sitemap-index.xml" />
        <meta name="apple-mobile-web-app-title" content={import.meta.env.SITE_NAME} />
        <meta name="application-name" content={import.meta.env.SITE_NAME} />
        <meta name="msapplication-TileColor" content="#2d89ef" />
        <meta name="msapplication-config" content="/icon/favicon/browserconfig.xml" />
        <meta name="theme-color" content="#ffffff" />
        <title>{`${Astro.props.frontmatter.title} - ${import.meta.env.SITE_NAME}`}</title>
        <meta name="author" content={authorId} />
        <meta name="description" content={Astro.props.frontmatter.description} />
        <meta property="og:url" content={Astro.url} />
        <meta property="og:type" content={Astro.url.pathname === "/" ? "website" : "article"} />
        <meta property="og:title" content={titleWithSiteName} />
        <meta property="og:description" content={Astro.props.frontmatter.description} />
        <meta property="og:site_name" content={import.meta.env.SITE_NAME} />
        <meta property="og:image" content={thumbnailUrl} />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:site" content="@keita_roboin" />
        <script type="application/ld+json" set:html={schema} />
        <script
            is:inline
            async
            src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-2526648882773973"
            crossorigin="anonymous"></script>
        <ViewTransitions />
    </head>
    <body>
        <header data-overlay-menu="closed" transition:persist="">
            <a href="/">
                <img src="/logo.svg" alt="ろぼいんロゴ" id="header_logo" loading="lazy" decoding="async" />
            </a>
            <nav>
                <a href="/article/">ARTICLES</a>
                <a href="/notice/">NEWS</a>
            </nav>
            <button id="menu_button" aria-label="メニューボタン">
                <div></div>
            </button>
        </header>
        <main transition:name="main">
            <article>
                {
                    Astro.props.frontmatter.showThumbnail && Astro.props.frontmatter.thumbnail && (
                        <Image
                            src={Astro.props.frontmatter.thumbnail}
                            width={Math.min(1920, Astro.props.frontmatter.thumbnail.width)}
                            alt="サムネイル"
                            loading="eager"
                        />
                    )
                }
                <h1>{Astro.props.frontmatter.title}</h1>
                <div id="article_info">
                    {
                        Astro.props.frontmatter.showDate && (
                            <span>
                                投稿日：
                                <time datetime={Astro.props.frontmatter.pubDate}>
                                    {ISO8601ToLocale(Astro.props.frontmatter.pubDate)}
                                </time>
                            </span>
                        )
                    }
                    {
                        Astro.props.frontmatter.showDate && Astro.props.frontmatter.modifiedDate && (
                            <span>
                                更新日：
                                <time datetime={Astro.props.frontmatter.modifiedDate}>
                                    {ISO8601ToLocale(Astro.props.frontmatter.modifiedDate)}
                                </time>
                            </span>
                        )
                    }
                </div>
                <slot />
            </article>
            <section class="share_button">
                <a
                    href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(
                        titleWithSiteName
                    )}&url=${encodeURIComponent(generateShareURL("twitter"))}&via=${encodeURIComponent(
                        "keita_roboin"
                    )}&related=${encodeURIComponent("keita_roboin")}%3A最新の情報を入手する`}
                    target="_blank"
                >
                    <img src="/icon/social/twitter.svg" alt="Twitterのアイコン" />
                </a>
                <a
                    href={`https://line.me/R/share?text=${encodeURIComponent(
                        `${titleWithSiteName} ${generateShareURL("line")}`
                    )}`}
                    target="_blank"
                >
                    <img src="/icon/social/line.svg" alt="LINEのアイコン" />
                </a>
                <a
                    href={`barcelona://create?text=${encodeURIComponent(
                        `${titleWithSiteName} ${generateShareURL("threads")}`
                    )}`}
                    target="_blank"
                >
                    <img src="/icon/social/threads.svg" alt="Threadsのアイコン" />
                </a>
            </section>
            {
                Astro.props.frontmatter.showAuthor && (
                    <address class="author_info">
                        <img
                            class="author_info-icon"
                            src={author.data.icon}
                            alt="著者のアイコン画像"
                            loading="lazy"
                            decoding="async"
                        />
                        <div class="author_info-text">
                            <b class="author_info-name">{authorId}</b>
                            <div class="author_info-link_container">
                                {Object.keys(author.data.profileLinks).map((linkName) => {
                                    const link = author.data.profileLinks[linkName];
                                    return (
                                        <a href={link} target="_blank">
                                            {linkName}
                                        </a>
                                    );
                                })}
                            </div>
                        </div>
                    </address>
                )
            }
        </main>
        <footer>
            <p>Copyright © 2023 ろぼいん All rights reserved.</p>
            <p><a href="/tos/">利用規約</a>・<a href="/privacy/">プライバシーポリシー</a></p>
        </footer>
        <script src="./Layout.ts"></script>
    </body>
</html>
