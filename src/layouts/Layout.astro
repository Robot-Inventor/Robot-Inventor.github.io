---
import { getEntry } from "astro:content";
import { ViewTransitions } from "astro:transitions";

interface Props {
    frontmatter: {
        title: string;
        description: string;
        author:
            | string
            | {
                  id: string;
                  collection: string;
              };
        pubDate: string;
        modifiedDate?: string;
        showDate?: boolean;
        thumbnail?: ImageMetadata;
        showThumbnail: boolean;
    };
}

if (!Astro.site) throw new Error("site is not defined");
let thumbnailUrl = new URL("/icon/ogp_default_thumbnail.png", Astro.site.href).href;
if (Astro.props.frontmatter.thumbnail) {
    thumbnailUrl = new URL(Astro.props.frontmatter.thumbnail.src, Astro.site.href).href;
}

const authorId =
    typeof Astro.props.frontmatter.author === "string"
        ? Astro.props.frontmatter.author
        : Astro.props.frontmatter.author.id;
const author = await getEntry("author", authorId);
if (!author) throw new Error("Undefined author");

const titleWithSiteName = `${Astro.props.frontmatter.title} - ${import.meta.env.SITE_NAME}`;

const schema = JSON.stringify([
    {
        "@context": "https://schema.org",
        "@type": "WebSite",
        name: import.meta.env.SITE_NAME,
        url: Astro.site
    },
    {
        "@context": "https://schema.org",
        "@type": "BlogPosting",
        mainEntityOfPage: {
            "@type": "WebPage",
            "@id": Astro.url
        },
        headline: titleWithSiteName,
        description: Astro.props.frontmatter.description,
        // TODO: すべての画像を取得
        image: [thumbnailUrl],
        author: {
            "@type": author.data.type,
            name: authorId,
            url: author.data.homePage,
            sameAs: author.data.sameAs
        },
        datePublished: Astro.props.frontmatter.pubDate,
        dateModified: Astro.props.frontmatter.modifiedDate || Astro.props.frontmatter.pubDate
    }
]);

const generateShareURL = (source: string) => {
    const url = new URL(Astro.url);
    url.searchParams.append("utm_source", source);
    return url.href;
};

const ISO8601ToLocale = (iso8601: string) => {
    return iso8601
        .replace("T", " ")
        .replace(/[\+\-]\d{2}:\d{2}/, "")
        .replace(/(\d{2,4})\-(\d{1,2})\-(\d{1,2})/, "$1年$2月$3日")
        .replace(/(\d{2}:\d{2}):\d{2}/, "$1")
        .replace(/\.\d+$/, "");
};
---

<!doctype html>
<html lang="ja">
    <head prefix="og: http://ogp.me/ns#">
        <!-- Google tag (gtag.js) -->
        <script async src="https://www.googletagmanager.com/gtag/js?id=G-7HZY93W2BY"></script>
        <script>
            window.dataLayer = window.dataLayer || [];
            function gtag() {
                dataLayer.push(arguments);
            }
            gtag("js", new Date());

            gtag("config", "G-7HZY93W2BY");
        </script>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@300;700&display=swap" rel="stylesheet" />
        <link rel="apple-touch-icon" sizes="180x180" href="/icon/favicon/apple-touch-icon.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/icon/favicon/favicon-32x32.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/icon/favicon/favicon-16x16.png" />
        <link rel="manifest" href="/icon/favicon/site.webmanifest" />
        <link rel="mask-icon" href="/icon/favicon/safari-pinned-tab.svg" color="#ffa4a4" />
        <link rel="shortcut icon" href="/icon/favicon/favicon.ico" />
        <link
            rel="alternate"
            type="application/rss+xml"
            title={`${import.meta.env.SITE_NAME} RSS Feed`}
            href={`${import.meta.env.SITE}/rss.xml`}
        />
        <link rel="sitemap" href="/sitemap-index.xml" />
        <meta name="apple-mobile-web-app-title" content={import.meta.env.SITE_NAME} />
        <meta name="application-name" content={import.meta.env.SITE_NAME} />
        <meta name="msapplication-TileColor" content="#2d89ef" />
        <meta name="msapplication-config" content="/icon/favicon/browserconfig.xml" />
        <meta name="theme-color" content="#ffffff" />
        <title>{`${Astro.props.frontmatter.title} - ${import.meta.env.SITE_NAME}`}</title>
        <meta name="author" content={authorId} />
        <meta name="description" content={Astro.props.frontmatter.description} />
        <meta property="og:url" content={Astro.url} />
        <meta property="og:type" content={Astro.url.pathname === "/" ? "website" : "article"} />
        <meta property="og:title" content={titleWithSiteName} />
        <meta property="og:description" content={Astro.props.frontmatter.description} />
        <meta property="og:site_name" content={import.meta.env.SITE_NAME} />
        <meta property="og:image" content={thumbnailUrl} />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:site" content="@keita_roboin" />
        <script type="application/ld+json" set:html={schema} />
        <ViewTransitions />
    </head>
    <body>
        <header data-overlay-menu="closed" transition:persist="">
            <a href="/">
                <img src="/logo.svg" alt="ろぼいんロゴ" id="header_logo" loading="lazy" decoding="async" />
            </a>
            <nav>
                <a href="/article/">ARTICLES</a>
                <a href="/notice/">NEWS</a>
            </nav>
            <button id="menu_button">
                <div></div>
            </button>
        </header>
        <main transition:name="main">
            <article>
                {
                    Astro.props.frontmatter.showThumbnail && Astro.props.frontmatter.thumbnail && (
                        <img
                            src={Astro.props.frontmatter.thumbnail.src}
                            alt="サムネイル"
                            width={Astro.props.frontmatter.thumbnail.width}
                            height={Astro.props.frontmatter.thumbnail.height}
                        />
                    )
                }
                <h1>{Astro.props.frontmatter.title}</h1>
                <div id="article_info">
                    {
                        Astro.props.frontmatter.showDate && (
                            <span>
                                投稿日：
                                <time datetime={Astro.props.frontmatter.pubDate}>
                                    {ISO8601ToLocale(Astro.props.frontmatter.pubDate)}
                                </time>
                            </span>
                        )
                    }
                    {
                        Astro.props.frontmatter.showDate && Astro.props.frontmatter.modifiedDate && (
                            <span>
                                更新日：
                                <time datetime={Astro.props.frontmatter.modifiedDate}>
                                    {ISO8601ToLocale(Astro.props.frontmatter.modifiedDate)}
                                </time>
                            </span>
                        )
                    }
                </div>
                <slot />
            </article>
            <section class="share_button">
                <a
                    href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(
                        titleWithSiteName
                    )}&url=${encodeURIComponent(generateShareURL("twitter"))}&via=${encodeURIComponent(
                        "keita_roboin"
                    )}&related=${encodeURIComponent("keita_roboin")}%3A最新の情報を入手する`}
                    target="_blank"
                >
                    <img src="/icon/social/twitter.svg" alt="Twitterのアイコン" />
                </a>
                <a
                    href={`https://line.me/R/share?text=${encodeURIComponent(
                        `${titleWithSiteName} ${generateShareURL("line")}`
                    )}`}
                    target="_blank"
                >
                    <img src="/icon/social/line.svg" alt="LINEのアイコン" />
                </a>
                <a
                    href={`barcelona://create?text=${encodeURIComponent(
                        `${titleWithSiteName} ${generateShareURL("threads")}`
                    )}`}
                    target="_blank"
                >
                    <img src="/icon/social/threads.svg" alt="Threadsのアイコン" />
                </a>
            </section>
            <address class="author_info">
                <img
                    class="author_info-icon"
                    src={author.data.icon}
                    alt="著者のアイコン画像"
                    loading="lazy"
                    decoding="async"
                />
                <div class="author_info-text">
                    <b class="author_info-name">{authorId}</b>
                    <div class="author_info-link_container">
                        {
                            Object.keys(author.data.profileLinks).map((linkName) => {
                                const link = author.data.profileLinks[linkName];
                                return (
                                    <a href={link} target="_blank">
                                        {linkName}
                                    </a>
                                );
                            })
                        }
                    </div>
                </div>
            </address>
        </main>
        <footer>
            <p>Copyright © 2023 ろぼいん All rights reserved.</p>
            <p><a href="/tos/">利用規約</a>・<a href="/privacy/">プライバシーポリシー</a></p>
        </footer>
        <style is:global>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }

            :root {
                --header-height: 4rem;
                --footer-height: 10rem;
                --social-icon-size: max(2.5rem, 40px);

                --secondary-background-color: #fff;
                --base-background-color: #fff;
                --base-text-color: #333;
                --middle-emphasis-color: rgb(0, 0, 0, 0.6);
                --low-emphasis-color: rgb(0, 0, 0, 0.6);

                --info-block-background-color: #e2f3fd;
                --info-block-border-color: #3fb0f3;
                --info-block-font-color: #0b72ad;
                --warn-block-background-color: #fff5cd;
                --warn-block-border-color: #f5c300;
                --warn-block-font-color: #cfa500;
                --alert-block-background-color: #ffcdcd;
                --alert-block-border-color: #b30909;
                --alert-block-font-color: #970000;
            }

            @media (prefers-color-scheme: dark) {
                :root {
                    --secondary-background-color: #2a2a2a;
                    --base-background-color: #191919;
                    --base-text-color: #fff;
                    --middle-emphasis-color: rgb(255, 255, 255, 0.6);
                    --low-emphasis-color: rgb(255, 255, 255, 0.6);

                    --info-block-background-color: #2a4453;
                    --info-block-border-color: #60b2e4;
                    --info-block-font-color: #99daff;
                    --warn-block-background-color: #665200;
                    --warn-block-border-color: #c8b157;
                    --warn-block-font-color: #e6d17d;
                    --alert-block-background-color: #681e1e;
                    --alert-block-border-color: #c85757;
                    --alert-block-font-color: #ffbcbc;
                }
            }

            html,
            body {
                color-scheme: light dark;
                color: var(--base-text-color);
                background: var(--base-background-color);
                font-family: "Noto Sans JP", sans-serif;
            }

            header {
                position: fixed;
                width: 100vw;
                height: var(--header-height);
                border-bottom: 0.1rem solid rgb(0, 0, 0, 0.2);
                background: var(--secondary-background-color);
                z-index: 1;
            }

            #header_logo {
                height: calc(100% - 2rem);
                margin: 1rem 0 0 1rem;
            }

            header nav {
                position: absolute;
                top: 0.2rem;
                right: 2rem;
            }

            header nav a {
                color: inherit;
                text-decoration: none;
                font-size: 1.5rem;
                display: inline-block;
                margin: 0.75rem 0 auto 2rem;
            }

            #menu_button {
                width: calc(var(--header-height) - 2rem);
                height: calc(var(--header-height) - 2.5rem);
                border: none;
                background: none;
                cursor: pointer;
                position: absolute;
                right: 1rem;
                top: 50%;
                transform: translateY(-50%);
                display: none;
            }

            #menu_button div,
            #menu_button div::before,
            #menu_button div::after {
                display: block;
                content: "";
                width: 100%;
                height: 0.2rem;
                background: var(--base-text-color);
                border-radius: 0.2rem;
                transition: 0.3s;
                transform-origin: left;
            }

            #menu_button div::before {
                position: absolute;
                top: 0;
                left: 0;
            }

            #menu_button div::after {
                position: absolute;
                bottom: 0;
                left: 0;
            }

            @media (orientation: portrait) {
                #header_logo {
                    position: absolute;
                    top: 1rem;
                    left: 50%;
                    transform: translateX(-50%);
                    margin: 0;
                }

                header nav {
                    background: var(--secondary-background-color);
                    position: absolute;
                    top: var(--header-height);
                    left: 100vw;
                    width: 100vw;
                    height: calc(100vh - var(--header-height));
                    padding-top: 1rem;
                    transition: 0.3s;
                }

                header[data-overlay-menu="closed"] nav {
                    left: 100vw;
                }

                header[data-overlay-menu="opened"] nav {
                    left: 0;
                }

                header nav a {
                    display: block;
                    margin-bottom: 1rem;
                }

                #menu_button {
                    display: block;
                }

                header[data-overlay-menu="opened"] #menu_button div {
                    background: none;
                }

                header[data-overlay-menu="opened"] #menu_button div::before {
                    transform: rotate(45deg);
                    width: 95%;
                }

                header[data-overlay-menu="opened"] #menu_button div::after {
                    transform: rotate(-45deg);
                    width: 95%;
                }
            }

            main {
                min-height: calc(100vh - var(--footer-height));
                padding: var(--header-height) 0.75rem 3rem 0.75rem;
                width: 100%;
                display: grid;
                grid-template-columns: 1fr auto 1fr;
            }

            #article_info {
                color: var(--middle-emphasis-color);
                display: flex;
                justify-content: flex-start;
                flex-direction: row;
                flex-wrap: wrap;
                gap: 0 1rem;
                margin: 0.75rem 0 2.5rem 0;
                z-index: 0;
            }

            main > article {
                grid-column: 2;
                width: 100%;
                max-width: 35rem;
                padding-top: 0.5rem;
            }

            main > article a {
                color: inherit;
            }

            main > article a:hover {
                color: #acd8ff;
            }

            main > article img {
                max-width: 100%;
                max-height: 70vh;
                width: auto;
                height: auto;
                display: block;
                margin: auto;
            }

            main > article pre {
                padding: 0.75rem;
                margin: 1rem 0;
            }

            main > article hr {
                border: none;
                width: 100%;
                height: 0.1rem;
                background: var(--base-text-color);
                opacity: 0.5;
                margin: 1.5rem 0;
            }

            main > article table {
                width: 100%;
                overflow-x: scroll;
                border: solid 0.1rem var(--base-text-color);
                border-collapse: collapse;
                margin: 1.5rem 0;
            }

            main > article th,
            main > article td {
                border: solid 0.1rem var(--base-text-color);
                padding: 0.5rem;
            }

            main > article h1 {
                font-size: 2rem;
                line-height: calc(0.25rem * 13);
                margin-top: 1rem;
                font-feature-settings: "palt";
            }

            main > article h2 {
                font-size: 1.75rem;
                line-height: calc(0.25rem * 12);
                font-feature-settings: "palt";
            }

            main > article h3 {
                font-size: 1.5rem;
                line-height: calc(0.25rem * 10);
                font-feature-settings: "palt";
            }

            main > article h4 {
                font-size: 1.3125rem;
                line-height: calc(0.25rem * 9);
                font-feature-settings: "palt";
            }

            main > article h5 {
                font-size: 1.125rem;
                line-height: calc(0.25rem * 8);
                font-feature-settings: "palt";
            }

            main > article h6 {
                font-size: 0.875rem;
                line-height: calc(0.25rem * 6);
                font-feature-settings: "palt";
            }

            main > article p {
                font-size: 1rem;
                line-height: calc(0.25rem * 7);
                text-align: justify;
                text-justify: inter-character;
            }

            main > article * + h2 {
                margin-top: calc(0.25rem * 11);
            }

            main > article * + h3 {
                margin-top: calc(0.25rem * 10);
            }

            main > article * + h4 {
                margin-top: calc(0.25rem * 8);
            }

            main > article * + h5 {
                margin-top: calc(0.25rem * 7);
            }

            main > article * + h6 {
                margin-top: calc(0.25rem * 6);
            }

            main > article * + p {
                margin-top: calc(0.25rem * 5);
            }

            main > article blockquote {
                color: var(--low-emphasis-color);
                border-left: 0.25rem solid var(--low-emphasis-color);
                padding-left: 0.5rem;
                margin: 1.25rem 0;
            }

            main > article ul,
            main > article ol {
                margin: 1.25rem 0;
                margin-left: 2rem;
            }

            main > article ul > li,
            main > article ol > li {
                margin: 0.5rem 0;
            }

            .share_button {
                display: flex;
                gap: calc(var(--social-icon-size) / 2);
                padding: calc(var(--social-icon-size) / 2);
                grid-column: 2;
            }

            .share_button img {
                width: var(--social-icon-size);
                height: var(--social-icon-size);
            }

            .author_info {
                font-style: normal;
                border-color: var(--low-emphasis-color);
                border-style: solid;
                border-width: 0.1rem 0;
                padding: 1.5rem;
                display: grid;
                gap: 1.5rem;
                grid-template-columns: 4rem 1fr;
                margin-top: 0.5rem;
                grid-column: 2;
            }

            .author_info-icon {
                width: 4rem;
                height: 4rem;
                border-radius: 2rem;
                object-fit: cover;
                margin: auto;
            }

            .author_info-text {
                display: inline-block;
                margin: auto 0;
            }

            .author_info-name {
                font-size: 1.25rem;
                font-weight: bold;
            }

            .author_info-link_container {
                display: flex;
                flex-wrap: wrap;
                gap: 0 1rem;
                margin-top: 0.5rem;
            }

            .author_info-link_container a {
                color: inherit;
                text-decoration: none;
            }

            .note {
                background: var(--note-background-color);
                border: 0.1rem solid var(--note-border-color);
                padding: 0.5rem 1rem;
                padding-left: 3rem;
                border-radius: 0.5rem;
                margin: 1rem 0;
                position: relative;
                top: 0;
                left: 0;
                color: var(--note-font-color);
            }

            .note::before {
                content: "";
                display: block;
                position: absolute;
                top: 50%;
                transform: translate(-2rem, -50%);
                background: var(--note-icon-url);
                width: 1.5rem;
                height: 1.5rem;
                background-size: 1.5rem;
            }

            .note > * {
                width: calc(100% - 2rem);
                margin-left: 2rem;
            }

            .note > p:first-child {
                margin-top: 0;
            }

            .note > p:last-child {
                margin-bottom: 0;
            }

            .note.info {
                --note-background-color: var(--info-block-background-color);
                --note-border-color: var(--info-block-border-color);
                --note-font-color: var(--info-block-font-color);
                --note-icon-url: url("/icon/info.svg");
            }

            .note.warn {
                --note-background-color: var(--warn-block-background-color);
                --note-border-color: var(--warn-block-border-color);
                --note-font-color: var(--warn-block-font-color);
                --note-icon-url: url("/icon/warn.svg");
            }

            .note.alert {
                --note-background-color: var(--alert-block-background-color);
                --note-border-color: var(--alert-block-border-color);
                --note-font-color: var(--alert-block-font-color);
                --note-icon-url: url("/icon/alert.svg");
            }

            footer {
                background: #3a3a3a;
                height: var(--footer-height);
                color: white;
                padding-top: 2.5rem;
            }

            footer p {
                text-align: center;
                margin-bottom: 0.5rem;
            }

            footer a {
                color: inherit;
            }
        </style>
        <script>
            const header = document.querySelector("header") as HTMLElement | null;
            if (!header) throw new Error("header is not defined");
            const menu_button = document.getElementById("menu_button");
            if (!menu_button) throw new Error("menu_button is not defined");

            menu_button.addEventListener("click", () => {
                header.dataset.overlayMenu = header.dataset.overlayMenu === "closed" ? "opened" : "closed";
            });

            const menu_items = document.querySelectorAll("header nav a");
            menu_items.forEach((item) => {
                item.addEventListener("click", () => {
                    header.dataset.overlayMenu = "closed";
                });
            });

            document.addEventListener("astro:page-load", () => {
                const links = document.querySelectorAll("main > article a");
                links.forEach((link) => {
                    if (!link.href.endsWith("/")) {
                        link.setAttribute("data-astro-reload", "");
                    }
                });
            });
        </script>
    </body>
</html>
