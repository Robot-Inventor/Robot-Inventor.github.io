---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import type { CollectionEntry } from "astro:content";
import ArticleCard from "@components/ArticleCard.astro";

export async function getStaticPaths() {
    const tagEntries = await getCollection("tag");
    return tagEntries.map((entry) => ({
        params: { slug: entry.id },
        props: { entry }
    }));
}

const { entry } = Astro.props as { entry: CollectionEntry<"tag"> };

const articles = await getCollection("article", ({ data }) => {
    if (!data.tags) return false;
    return data.tags.some((tag) => tag.id === entry.id);
});
const articleLinks = articles
    .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime())
    .map((article) => `/article/${article.slug}/`);
---

<Layout
    frontmatter={{
        title: `「${entry.data.name}」タグが付いた記事一覧`,
        description: `${entry.data.name}についての記事一覧です。`,
        author: "ろぼいん",
        showAuthor: false,
        pubDate: "2023-10-28T00:00:00.000+09:00",
        showDate: false,
        showThumbnail: false,
        showRecommendedArticles: false,
        showToc: false
    }}
    headings={[]}
>
    <div id="article_list_area">
        {articleLinks.map((article) => <ArticleCard link={article} type="portrait" />)}
    </div>
    <style is:inline>
        #article_list_area > * {
            flex-basis: calc(100% - 0.5rem);
        }

        @media (orientation: landscape) {
            #article_list_area > *:not([card-type="landscape"]) {
                flex-basis: calc(50% - 0.5rem);
            }
        }

        #article_list_area {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: space-between;
            align-items: stretch;
            align-content: flex-start;
            gap: 1rem;
        }
    </style>
</Layout>
